/* tslint:disable */
/* eslint-disable */
/**
 * DOCUMENTATION
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact-email@something.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OtherLinkWithTextComponent } from './OtherLinkWithTextComponent';
import {
    OtherLinkWithTextComponentFromJSON,
    OtherLinkWithTextComponentFromJSONTyped,
    OtherLinkWithTextComponentToJSON,
} from './OtherLinkWithTextComponent';
import type { BlogRequestDataThumbnail } from './BlogRequestDataThumbnail';
import {
    BlogRequestDataThumbnailFromJSON,
    BlogRequestDataThumbnailFromJSONTyped,
    BlogRequestDataThumbnailToJSON,
} from './BlogRequestDataThumbnail';
import type { OtherSeoComponent } from './OtherSeoComponent';
import {
    OtherSeoComponentFromJSON,
    OtherSeoComponentFromJSONTyped,
    OtherSeoComponentToJSON,
} from './OtherSeoComponent';

/**
 * 
 * @export
 * @interface ProductRequestData
 */
export interface ProductRequestData {
    /**
     * 
     * @type {string}
     * @memberof ProductRequestData
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof ProductRequestData
     */
    description: string;
    /**
     * 
     * @type {BlogRequestDataThumbnail}
     * @memberof ProductRequestData
     */
    logo: BlogRequestDataThumbnail;
    /**
     * 
     * @type {string}
     * @memberof ProductRequestData
     */
    prevTitle: string;
    /**
     * 
     * @type {string}
     * @memberof ProductRequestData
     */
    prevDescription: string;
    /**
     * 
     * @type {BlogRequestDataThumbnail}
     * @memberof ProductRequestData
     */
    prevImage: BlogRequestDataThumbnail;
    /**
     * 
     * @type {Array<BlogRequestDataThumbnail>}
     * @memberof ProductRequestData
     */
    slider: Array<BlogRequestDataThumbnail>;
    /**
     * 
     * @type {boolean}
     * @memberof ProductRequestData
     */
    isDark?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ProductRequestData
     */
    twitter?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductRequestData
     */
    discord?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductRequestData
     */
    notification?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductRequestData
     */
    headerTitle: string;
    /**
     * 
     * @type {string}
     * @memberof ProductRequestData
     */
    headerDescription: string;
    /**
     * 
     * @type {BlogRequestDataThumbnail}
     * @memberof ProductRequestData
     */
    prevImageMobile: BlogRequestDataThumbnail;
    /**
     * 
     * @type {OtherSeoComponent}
     * @memberof ProductRequestData
     */
    seo?: OtherSeoComponent;
    /**
     * 
     * @type {string}
     * @memberof ProductRequestData
     */
    slug: string;
    /**
     * 
     * @type {OtherLinkWithTextComponent}
     * @memberof ProductRequestData
     */
    websiteButton?: OtherLinkWithTextComponent;
}

/**
 * Check if a given object implements the ProductRequestData interface.
 */
export function instanceOfProductRequestData(value: object): value is ProductRequestData {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('logo' in value) || value['logo'] === undefined) return false;
    if (!('prevTitle' in value) || value['prevTitle'] === undefined) return false;
    if (!('prevDescription' in value) || value['prevDescription'] === undefined) return false;
    if (!('prevImage' in value) || value['prevImage'] === undefined) return false;
    if (!('slider' in value) || value['slider'] === undefined) return false;
    if (!('headerTitle' in value) || value['headerTitle'] === undefined) return false;
    if (!('headerDescription' in value) || value['headerDescription'] === undefined) return false;
    if (!('prevImageMobile' in value) || value['prevImageMobile'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    return true;
}

export function ProductRequestDataFromJSON(json: any): ProductRequestData {
    return ProductRequestDataFromJSONTyped(json, false);
}

export function ProductRequestDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductRequestData {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'description': json['description'],
        'logo': BlogRequestDataThumbnailFromJSON(json['logo']),
        'prevTitle': json['prevTitle'],
        'prevDescription': json['prevDescription'],
        'prevImage': BlogRequestDataThumbnailFromJSON(json['prevImage']),
        'slider': ((json['slider'] as Array<any>).map(BlogRequestDataThumbnailFromJSON)),
        'isDark': json['isDark'] == null ? undefined : json['isDark'],
        'twitter': json['twitter'] == null ? undefined : json['twitter'],
        'discord': json['discord'] == null ? undefined : json['discord'],
        'notification': json['notification'] == null ? undefined : json['notification'],
        'headerTitle': json['headerTitle'],
        'headerDescription': json['headerDescription'],
        'prevImageMobile': BlogRequestDataThumbnailFromJSON(json['prevImageMobile']),
        'seo': json['Seo'] == null ? undefined : OtherSeoComponentFromJSON(json['Seo']),
        'slug': json['slug'],
        'websiteButton': json['websiteButton'] == null ? undefined : OtherLinkWithTextComponentFromJSON(json['websiteButton']),
    };
}

export function ProductRequestDataToJSON(value?: ProductRequestData | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'title': value['title'],
        'description': value['description'],
        'logo': BlogRequestDataThumbnailToJSON(value['logo']),
        'prevTitle': value['prevTitle'],
        'prevDescription': value['prevDescription'],
        'prevImage': BlogRequestDataThumbnailToJSON(value['prevImage']),
        'slider': ((value['slider'] as Array<any>).map(BlogRequestDataThumbnailToJSON)),
        'isDark': value['isDark'],
        'twitter': value['twitter'],
        'discord': value['discord'],
        'notification': value['notification'],
        'headerTitle': value['headerTitle'],
        'headerDescription': value['headerDescription'],
        'prevImageMobile': BlogRequestDataThumbnailToJSON(value['prevImageMobile']),
        'Seo': OtherSeoComponentToJSON(value['seo']),
        'slug': value['slug'],
        'websiteButton': OtherLinkWithTextComponentToJSON(value['websiteButton']),
    };
}

